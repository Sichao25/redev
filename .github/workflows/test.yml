name: mpi test
on:
  push:
    branches: [ yus/add_perfstubs ]

jobs:
  test-build:
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    defaults:
      run:
        shell: bash
      
    steps:

    - name: Update packages
      run: sudo apt-get update

    - name: Install mpi
      run: sudo apt-get install -yq cmake

    - name: Install mpi
      run: |
        sudo apt-get update -yq
        sudo apt-get purge mpich
        sudo apt-get install -yq mpich libmpich-dev 

    # - name: Kokkos Checkout repo
    #   uses: actions/checkout@v3
    #   with:
    #     repository: kokkos/kokkos
    #     ref: 4.7.00
    #     path: kokkos
    
    # - name: Kokkos Create Build Environment
    #   run: cmake -E make_directory ${{runner.workspace}}/build-kokkos
    
    # - name: Configure Kokkos
    #   working-directory: ${{runner.workspace}}/build-kokkos
    #   run: |
    #     cmake $GITHUB_WORKSPACE/kokkos \
    #       -DCMAKE_CXX_STANDARD=17 \
    #       -DBUILD_SHARED_LIBS=OFF \
    #       -DKokkos_ENABLE_SERIAL=ON \
    #       -DKokkos_ENABLE_OPENMP=OFF \
    #       -DKokkos_ENABLE_CUDA=OFF \
    #       -DKokkos_ENABLE_CUDA_LAMBDA=OFF \
    #       -DKokkos_ENABLE_CUDA_CONSTEXPR=OFF
    
    # - name: Build Kokkos
    #   working-directory: ${{runner.workspace}}/build-kokkos
    #   run: |
    #     sudo cmake --build ${{runner.workspace}}/build-kokkos --target install -j 8
    
    # - name: Omega_h Checkout repo
    #   uses: actions/checkout@v3
    #   with:
    #     repository: SCOREC/omega_h
    #     path: omega_h
  
    # - name: Omega_h Create Build Environment
    #   run: cmake -E make_directory ${{runner.workspace}}/build-omega_h
    
    # - name: Configure Omega_h
    #   working-directory: ${{runner.workspace}}/build-omega_h
    #   run: |
    #     cmake $GITHUB_WORKSPACE/omega_h \
    #       -DCMAKE_CXX_COMPILER=mpicxx \
    #       -DCMAKE_C_COMPILER=mpicc \
    #       -DBUILD_SHARED_LIBS=OFF \
    #       -DOmega_h_USE_MPI=ON \
    #       -DOmega_h_USE_Kokkos=ON \
    #       -DBUILD_TESTING=OFF \
    #       -DMPIEXEC_EXECUTABLE=mpirun \
    #       -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/build-omega_h/install \
    #       -DKokkos_DIR=${{runner.workspace}}/build-kokkos/install/lib/cmake/Kokkos
    
    # - name: Build Omega_h
    #   working-directory: ${{runner.workspace}}/build-omega_h
    #   run: |
    #     sudo cmake --build ${{runner.workspace}}/build-omega_h --target install -j 8

    - name: ADIOS2 Checkout repo
      uses: actions/checkout@v4
      with:
        repository: ornladios/adios2
        path: adios2
    
    - name: ADIOS2 Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build-adios2

    - name: Configure ADIOS2
      working-directory: ${{runner.workspace}}/build-adios2
      run: |
        cmake $GITHUB_WORKSPACE/adios2 \
          -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/build-adios2/install \
          -DCMAKE_CXX_COMPILER=mpicxx \
          -DCMAKE_C_COMPILER=mpicc \
          -DADIOS2_USE_MPI=ON \
          -DADIOS2_USE_CUDA=OFF \
          -DADIOS2_BUILD_EXAMPLES=OFF \
          -DBUILD_TESTING=OFF \
          -DADIOS2_USE_HDF5=off \
          -DADIOS2_USE_ZFP=off \
          -DADIOS2_HAVE_Profiling=off \
          -DADIOS2_USE_Fortran=OFF \
          -DADIOS2_USE_SST=ON \
          -DADIOS2_INSTALL_GENERATE_CONFIG=OFF
    
    - name: Build ADIOS2
      working-directory: ${{runner.workspace}}/build-adios2
      run: |
        cmake --build ${{runner.workspace}}/build-adios2 --target install -j 8
    
    - name: perfstubs Checkout repo
      uses: actions/checkout@v3
      with:
        repository: UO-OACISS/perfstubs
        path: perfstubs

    - name: perfstubs Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build-perfstubs
    
    - name: Configure perfstubs
      working-directory: ${{runner.workspace}}/build-perfstubs
      run: |
        cmake $GITHUB_WORKSPACE/perfstubs \
          -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/build-perfstubs/install \
          -DCMAKE_CXX_COMPILER=mpicxx \
          -DCMAKE_C_COMPILER=mpicc
    
    - name: Build perfstubs
      working-directory: ${{runner.workspace}}/build-perfstubs
      run: |
        cmake --build ${{runner.workspace}}/build-perfstubs --target install -j 8
    
    - name: Create redev Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build-redev
    
    - name: Redev Checkout repo
      uses: actions/checkout@v3
      with:
        path: redev

    - name: Configure redev
      working-directory: ${{runner.workspace}}/build-redev
      run: |
        ls -la /usr/bin
        which mpicc
        which mpic++
        cmake $GITHUB_WORKSPACE/redev \
          -DCMAKE_CXX_COMPILER=$(which mpicxx) \
          -DCMAKE_C_COMPILER=$(which mpicc) \
          -DMPIEXEC_EXECUTABLE=$(which mpirun) \
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
          -DADIOS2_DIR=${{runner.workspace}}/build-adios2/install/lib/cmake/adios2/ \
          -DADIOS2_HAVE_SST=ON \
          -DADIOS2_BPLS_PATH=${{runner.workspace}}/build-adios2/install/bin/bpls \
          -Dperfstubs_DIR=${{runner.workspace}}/build-perfstubs/install/lib/cmake/ \
          -DBUILD_TESTING=ON
    
    - name: Build redev
      working-directory: ${{runner.workspace}}/build-redev
      run: |
        cmake --build ${{runner.workspace}}/build-redev

    - name: Run Tests
      working-directory: ${{runner.workspace}}/build-redev
      run: |
        ctest --output-on-failure
        